<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label1.Text" xml:space="preserve">
    <value>Бензиновый двигатель — это ДВС(Двигатель внутреннего сгорания) средством питания, которого является бензин. Горючее подаётся с топливного бака при помощи насоса (механического или электрического) на систему впрыска. Итак, рассмотрим, какие бывают типы бензиновых моторов:
-С карбюратором.
-Инжекторного типа.</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Карбюраторная система впрыска
Карбюратор — это тип впрыскового устройства горючего во впускной коллектор с дальнейшим распределением по цилиндрам.
Карбюраторы бывают — одно-, двух-, четырех- и шестикамерные. Кроме этого существует достаточно много прототипов.
Недостатком карбюратора стало то, что он чувствительный к регулировкам, а также не соответствует экологическим международным нормам.</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>Инжектор
Инжекторный двигатель — это тип впрыскового устройства горючего в цилиндры двигателя. Инжекторный впрыск бывает моно и разделённым Данная система на сегодняшний день все больше совершенствуется, чтобы уменьшит выбросы СО2 в атмосферу. Для впрыска используются форсунки, которые ещё ранее начали использоваться на дизельных двигателях.
С переходом на данную систему транспортные средства стали оснащать электронными блоками управления двигателем, чтобы корректировать состав воздушно-топливной смеси, а также сигнализировать о неисправностях внутри системы.</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>Дизельные двигатели
Дизельный мотор — это вид двигателя, который расходует как горючее дизельное топливо. Основные системы и элементы движка идентичны бензиновому брату, различие состоит в системе впрыска и воспламенении смеси. В дизельном моторе отсутствуют свечи зажигания, поскольку воспламенение смеси от искры не нужно.
На моторах такого типа устанавливаются свечи накала, которые разогревают воздух в камере сгорания, который превышает температуру воспламенения. После этого через форсунки подаётся распылённое топливо, которое сгорает, чем создаёт достаточное давление для привода в движения поршня, который раскручивает коленчатый вал.</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>Газовый двигатель
Газовые двигатели на сегодняшний день в автоиндустрии в чистом виде почти не используются, поскольку частые поломки моторов, стали причиной полного отказа от них. Вместо этого, газовые установки зачастую можно встретить на бензиновых автомобилях, что значительно экономит расход денег на горючее.
Газ с баллона подаётся на редуктор, который распределяет топливо по цилиндрам, а затем горючее попадает непосредственно в камеры сгорания. После этого с помощью свечей зажигания газ воспламеняется. Единственным недостатком использования газовой установки считается то, что мотор теряет 20% своего потенциального ресурса.</value>
  </data>
  <data name="label11.Text" xml:space="preserve">
    <value>Электрические моторы
Николас Тесла впервые предложил использовать для автомобилей электроэнергию. Электрические моторы на сегодняшний день не распространены, поскольку заряда батареи хватает только до 200 км пути, а заправочных станций, которые могут предоставить услугу зарядки автомобиля — практически нет.
Известная мировая компания, производитель электрических автомобилей «Тесла» продолжает совершенствовать электродвигатели, и каждый год дарит потребителям новинки, которые имеют больший запас хода без дозарядки.</value>
  </data>
  <data name="label12.Text" xml:space="preserve">
    <value>Гибриды
Наверное, самые желаемые двигатели на сегодняшний день. Это смесь бензинового двигателя внутреннего сгорания и электромотора. Существует несколько вариантов работы такого движка.
Мотор может работать на попеременном питании. Сначала движение производится на бензине, пока генератор заряжает батарею, а затем водитель может переключиться на электропитание.
Двигатель и электромотор работают одновременно, что помогает сэкономить расход горючего на одно, и тоже расстояние с другими типами ДВС.</value>
  </data>
</root>