<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Exite_Application.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7BAAAOwQG4kWvtAAAAAmJL
        R0QAAKqNIzIAAAAHdElNRQfkBQoOOij83sepAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIwLTA1LTEwVDE0
        OjU4OjQwKzAwOjAwDsxJpwAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMC0wNS0xMFQxNDo1ODo0MCswMDow
        MH+R8RsAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwaAAADDElEQVR4Xu3bS6hNURzH
        8eMRA+WVAQNSXuWRohiJYiJGYqAoExKFJGUi5TEwIKU8UowYMEDkMVEeE4UBmXjGBAMUIe/v79S9Xf/W
        3rq11trrrLt+9Zkcdddav3Pte87ea7Uq0h9LcAKP8RF/IviGl7iCDRiF6FmAB3BNMDYVvwMDESVb8BOu
        yTTpOkYgaDbCNXgqbmMwgmQOfsA1cEoOIkhuwjXgLehiOAwxond4BrTQ77Dz0WuT4TVzYQeSI9Bfg6ay
        EF9h53UYXrMPdpD7GICmsw12bq/RD95yDXaQNUghQ/AFdn5j4C2PYAeYhlRyD3Z+s+EtL2AHGI9UcgN2
        fvqw5i2lANgBSgFIJaUA2Pn1qQJOw85vIrwl9QL0PaXnZ4Gz8JrUC1D0jm/Ccnj/eN4JBQRNKQClAKPT
        C5iC/diN0XqhLrkVMAmf0LWWN5iOyuRWwC7Y9bxFZQm5FbAVdj1SWUJuBQzFE9g1ibOEHC+CY/EUdl3y
        Drrx2p0cC1DG4Rns2kS/CVPRTq4FKHUl6PX27f4YBegu7nysxbrI9uAX7BpF/xa8AC3+POwYKdCT6OAF
        6J23Pz8lwQtYCvvzUxK8AD3cqPq73LT3iHIR1E6PnTjWgFOo2vNwElEKaCp62nwJdn3yGROQbQF1i9dv
        xDK0k2MBg3ABdl2ixa9Cd3IrQDdNL8KuSbT4lfgnuRWwGnY94ly8klsBe2HXU7l4JbcC9MnzN7rWUrt4
        JceLoC5yd6HNX4v0Ql1yLKBXKQWgFGCkVoDu9W/GCnjfvpd6AdrI2fPx+Dl4TeoFnIGdn9ftsqkXUPYI
        wc6vFABvKQXADtCnCngIO0Dt8/TI0dZ9O79Z8JZO3C7/310fvYnr+7OOzaV6YOIVvB6Y0EZEO4gcRZMl
        6GusDlLaeXk/MqNUHZq6Az3ZGY4Y0Z3cmTgE1yk2HZrS9wLv0W+B65RWag4gWHRW1zVoKoIenOyK9uOm
        eIDyKmL9N2zNg+ugUhM+YDuiX4z1cGExjkOnyjQR1wR901X/OS5jPUYiYFqtv1GEJ4+fCemLAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>